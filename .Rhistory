Reg_salud = P6100,
Niv_educ = P6210,
Grado = P6210s1,
Temp_emp = P6426,
tipo_of = P6430,
horas_t =P6800,
cotiza_p = P6920,
Sub_Alim = P6585s1,
Sub_transp = P6585s2,
Sub_fam = P6585s3,
Sub_educ= P6585s4)
test_completa <-  test_completa %>%
mutate(Mdll = Dominio.x,
Cali = Dominio.x,
Bqa = Dominio.x,
Qbd = Dominio.x,
Gjr = Dominio.x,
Edad2 = Edad^2,
Mujer = Genero)
test_completa$Mujer <- as.numeric(test_completa$Mujer)
class(test_completa$Mujer)
test_completa <- test_completa %>%
mutate( Muj_edad = Mujer*Edad
,Mdll = factor(ifelse(Mdll =="MEDELLIN", 1, 0 )),
Cali = factor(ifelse(Cali =="CALI", 1, 0 )),
Bqa = factor(ifelse(Bqa =="BARRANQUILLA", 1, 0)),
Qbd = factor(ifelse(Qbd =="QUIBDO", 1, 0)),
Gjr = factor(ifelse(Gjr =="RIOHACHA", 1, 0)))
##### Dejo solo las variables que voy a utilizar
test_com1 <- subset(test_completa, select = c(l_pob,
l_ind,
T_vivienda,
T_hab,
Dormitorios,
val_arriendo,
Genero,
Edad,
Relacion_JH,
Reg_salud,
Niv_educ,
Grado,
Temp_emp,
tipo_of,
horas_t,
cotiza_p,
Sub_Alim,
Sub_transp,
Sub_fam,
Sub_educ,
id,
Clase.x,
Dominio.x,
Nper,
Npersug,
Orden,
Muj_edad,
Edad2,
Mdll,
Cali,
Bqa ,
Qbd,
Gjr,
Oficio))
train_completa <- merge(train_hogares, train_personas, by.x="id", by.y="id", all.x = TRUE, all.y = FALSE)
train_completa$P6020[train_completa$P6020 == 1] <- 0
train_completa$P6020[train_completa$P6020 == 2] <- 1
train_completa$P6585s1[train_completa$P6585s1 == 9] <- 3
train_completa$P6585s2[train_completa$P6585s2 == 9] <- 3
train_completa$P6585s3[train_completa$P6585s3 == 9] <- 3
train_completa$P6585s4[train_completa$P6585s4 == 9] <- 3
train_completa$Dominio.x <- as.factor(train_completa$Dominio.x)
train_completa <- train_completa %>%
mutate(Clase.x = factor(ifelse(Clase.x ==1, "cabecera (1)", "rural (0)" )),
P6020 = factor(ifelse(p6020 == 1, "Mujer", "Hombre")),
P6050 = factor(P6050, levels = c(1:9), labels = c("JEFE_H","Pareja_JH", "Hijo(a)", "Nieto", "Otro", "Empleado_S", "Pensionista", "Trabajador", "Otro_NP"  ),
P6210 = factor(P6210, levels = c(1:9), labels = c("Ninguno", "Preescolar","Basica_p","Basica_S","Media", "Superior_OU","","", "No sabe")),
P6240 = factor(P6240, levels = c(1:6), labels = c("Trabajando","Buscando_T","Estudiando", "Oficios_H", "Incapacitado_T", "Otra_A")),
P6430 = factor(P6430, levels = c(1:9), labels = c("Obrero_Part", "Obrero_Gov", "Emp_dom", "Cuenta_pro","Patron_Emp", "T_familiarnr", "T_NRotrosh", "Jornalero","otro")),
P5090 = factor(P5090, levels = c(1:6), labels = c("Propia_T", "Propia_p", "Arriendo", "Usufructo","Ocupante", "otra")),
P6100 = factor(P6100, levels = c(1:4), labels = c("Contributivo", "Especial", "subsidiado", "No_ sabe")),
P6585s1 = factor(P6585s1, levels = c(1:9), labels = c("si","no","no_sabe")),
P6585s2 = factor(P6585s2, levels = c(1:9), labels = c("si","no","no_sabe")),
P6585s3 = factor(P6585s3, levels = c(1:9), labels = c("si","no","no_sabe")),
P6585s4 = factor(P6585s4, levels = c(1:9), labels = c("si","no","no_sabe"))))
train_completa <- train_completa %>%
mutate(Clase.x = factor(ifelse(Clase.x ==1, "cabecera (1)", "rural (0)" )),
P6020 = factor(ifelse(P6020 == 1, "Mujer", "Hombre")),
P6050 = factor(P6050, levels = c(1:9), labels = c("JEFE_H","Pareja_JH", "Hijo(a)", "Nieto", "Otro", "Empleado_S", "Pensionista", "Trabajador", "Otro_NP"  ),
P6210 = factor(P6210, levels = c(1:9), labels = c("Ninguno", "Preescolar","Basica_p","Basica_S","Media", "Superior_OU","","", "No sabe")),
P6240 = factor(P6240, levels = c(1:6), labels = c("Trabajando","Buscando_T","Estudiando", "Oficios_H", "Incapacitado_T", "Otra_A")),
P6430 = factor(P6430, levels = c(1:9), labels = c("Obrero_Part", "Obrero_Gov", "Emp_dom", "Cuenta_pro","Patron_Emp", "T_familiarnr", "T_NRotrosh", "Jornalero","otro")),
P5090 = factor(P5090, levels = c(1:6), labels = c("Propia_T", "Propia_p", "Arriendo", "Usufructo","Ocupante", "otra")),
P6100 = factor(P6100, levels = c(1:4), labels = c("Contributivo", "Especial", "subsidiado", "No_ sabe")),
P6585s1 = factor(P6585s1, levels = c(1:9), labels = c("si","no","no_sabe")),
P6585s2 = factor(P6585s2, levels = c(1:9), labels = c("si","no","no_sabe")),
P6585s3 = factor(P6585s3, levels = c(1:9), labels = c("si","no","no_sabe")),
P6585s4 = factor(P6585s4, levels = c(1:9), labels = c("si","no","no_sabe"))))
train_completa <- train_completa %>%
mutate(Clase.x = factor(ifelse(Clase.x ==1, "cabecera (1)", "rural (0)" )),
P6020 = factor(ifelse(P6020 == 1, "Mujer", "Hombre")),
P6050 = factor(P6050, levels = c(1:9), labels = c("JEFE_H","Pareja_JH", "Hijo(a)", "Nieto", "Otro", "Empleado_S", "Pensionista", "Trabajador", "Otro_NP"  )),
P6210 = factor(P6210, levels = c(1:9), labels = c("Ninguno", "Preescolar","Basica_p","Basica_S","Media", "Superior_OU","","", "No sabe")),
P6240 = factor(P6240, levels = c(1:6), labels = c("Trabajando","Buscando_T","Estudiando", "Oficios_H", "Incapacitado_T", "Otra_A")),
P6430 = factor(P6430, levels = c(1:9), labels = c("Obrero_Part", "Obrero_Gov", "Emp_dom", "Cuenta_pro","Patron_Emp", "T_familiarnr", "T_NRotrosh", "Jornalero","otro")),
P5090 = factor(P5090, levels = c(1:6), labels = c("Propia_T", "Propia_p", "Arriendo", "Usufructo","Ocupante", "otra")),
P6100 = factor(P6100, levels = c(1:4), labels = c("Contributivo", "Especial", "subsidiado", "No_sabe")),
P6585s1 = factor(P6585s1, levels = c(1:3), labels = c("si","no","no_sabe")),
P6585s2 = factor(P6585s2, levels = c(1:3), labels = c("si","no","no_sabe")),
P6585s3 = factor(P6585s3, levels = c(1:3), labels = c("si","no","no_sabe")),
P6585s4 = factor(P6585s4, levels = c(1:3), labels = c("si","no","no_sabe")))
train_completa <- train_completa %>%
rename(l_pob = Lp,
l_ind = Li,
T_vivienda = P5090,
T_hab = P5000,
Dormitorios = P5010,
val_arriendo = P5130,
Genero = P6020,
Edad = P6040,
Relacion_JH = P6050,
Reg_salud = P6100,
Niv_educ = P6210,
Grado = P6210s1,
Temp_emp = P6426,
tipo_of = P6430,
horas_t =P6800,
cotiza_p = P6920,
Sub_Alim = P6585s1,
Sub_transp = P6585s2,
Sub_fam = P6585s3,
Sub_educ= P6585s4)
train_completa <-  train_completa %>%
mutate(Mdll = Dominio.x,
Cali = Dominio.x,
Bqa = Dominio.x,
Qbd = Dominio.x,
Gjr = Dominio.x,
Edad2 = Edad^2,
Mujer = Genero)
train_completa$Mujer <- as.numeric(train_completa$Mujer)
class(train_completa$Mujer)
train_completa <- train_completa %>%
mutate( Muj_edad = Mujer*Edad
,Mdll = factor(ifelse(Mdll =="MEDELLIN", 1, 0 )),
Cali = factor(ifelse(Cali =="CALI", 1, 0 )),
Bqa = factor(ifelse(Bqa =="BARRANQUILLA", 1, 0)),
Qbd = factor(ifelse(Qbd =="QUIBDO", 1, 0)),
Gjr = factor(ifelse(Gjr =="RIOHACHA", 1, 0)))
train_com1 <- subset(train_completa, select = c(l_pob,
l_ind,
T_vivienda,
T_hab,
Dormitorios,
val_arriendo,
Genero,
Edad,
Relacion_JH,
Reg_salud,
Niv_educ,
Grado,
Temp_emp,
tipo_of,
horas_t,
cotiza_p,
Sub_Alim,
Sub_transp,
Sub_fam,
Sub_educ,
id,
Clase.x,
Dominio.x,
Nper,
Npersug,
Orden,
Ingtotug,
Pobre,
Indigente,
Npobres,
Nindigentes,
Muj_edad,
Edad2,
Mdll,
Cali,
Bqa ,
Qbd,
Gjr,
Oficio))
test_com1 <- subset(test_completa, select = c(l_pob,
l_ind,
T_vivienda,
T_hab,
Dormitorios,
val_arriendo,
Genero,
Edad,
Relacion_JH,
Reg_salud,
Niv_educ,
Grado,
Temp_emp,
tipo_of,
horas_t,
cotiza_p,
Sub_Alim,
Sub_transp,
Sub_fam,
Sub_educ,
id,
Clase.x,
Dominio.x,
Nper,
Npersug,
Orden,
Muj_edad,
Edad2,
Mdll,
Cali,
Bqa ,
Qbd,
Gjr,
Oficio,
Ingtotugarr))
train_com1 <- subset(train_completa, select = c(l_pob,
l_ind,
T_vivienda,
T_hab,
Dormitorios,
val_arriendo,
Genero,
Edad,
Relacion_JH,
Reg_salud,
Niv_educ,
Grado,
Temp_emp,
tipo_of,
horas_t,
cotiza_p,
Sub_Alim,
Sub_transp,
Sub_fam,
Sub_educ,
id,
Clase.x,
Dominio.x,
Nper,
Npersug,
Orden,
Ingtotug,
Pobre,
Indigente,
Npobres,
Nindigentes,
Muj_edad,
Edad2,
Mdll,
Cali,
Bqa ,
Qbd,
Gjr,
Oficio,
Ingtotugarr))
modelo1 <- lm(Ingtotugarr~factor(Oficio), train_personas)
modelo1 <- lm(Ingtotugarr~factor(Oficio), train_hogares)
modelo1 <- lm(Ingtotugarr~factor(Oficio), train_hogares)
modelo1 <- lm(Ingtotugarr~Dominio.x, train_hogares)
modelo1 <- lm(Ingtotugarr~factor(Dominio), train_hogares)
ing_predicho <- predict(modelo1, newdata = test_hogares)
head(ing_predicho)
table(ing_predicho)
test_completa <- test_hogares %>%
mutate(ingreso = predict(modelo1, newdata = test_hogares))
View(test_completa)
modelo1 <- lm(Ingtotugarr~factor(Oficio), train_personas)
modelo1 <- lm(Ingtot~factor(Oficio), train_personas)
test_completa <- test_hogares %>%
mutate(ingreso = predict(modelo1, newdata = test_persona))
test_completa <- test_hogares %>%
mutate(ingreso = predict(modelo1, newdata = test_personas))
test_completa <- test_personas %>%
mutate(ingreso = predict(modelo1, newdata = test_personas))
View(test_completa)
install.packages("doby")
install.packages("doby")library(doby)
library(doby)
library("doby")
install.packages("doBy")
library("doBy")
test_completa <- test_completa %>%
mutate(summaryBy(ingreso ~ id))
test_completa$ingreso[is.na(test_completa$ingreso)] <- 0
test_completa <- test_completa %>%
mutate(ingr_hogar = summaryBy(ingreso ~ id))
help(agregate)
help(aggregate)
test_completa <- test_completa %>%
mutate(aggregate(ingreso ~ id, FUN = sum))
test_completa <- test_completa %>%
mutate(ingreso_hogar = aggregate(ingreso ~ id, FUN = sum))
test_completa <- test_completa %>%
mutate(ingreso_hogar = aggregate(ingreso ~ id, sum))
library(dplyr)
test_completa <- test_completa %>%
mutate(ingreso_hogar = aggregate(ingreso ~ id, FUN = sum))
test_completa <- test_completa %>%
mutate(ingreso_hogar = aggregate(ingreso,by = id, FUN = sum))
df <- ingreso_train
df <- ingreso_train
ingreso_train <- df
ingreso_train <- aggregate(test_hogares$ingreso,by = test_hogares$id, FUN = sum)
ingreso_train <- aggregate(test_completa$ingreso,by = test_completa$id, FUN = sum)
ingreso_train <- aggregate(test_completa$ingreso, by = list(test_completa$id), FUN = sum)
View(ingreso_train)
rm(list = ls())
test_hogares <- readRDS("C:/Users/ASUS/OneDrive - Universidad de los Andes/Documentos/Respaldo/MECA/BIGDATA/Taller-2/test_hogares.Rds")
test_personas <- readRDS("C:/Users/ASUS/OneDrive - Universidad de los Andes/Documentos/Respaldo/MECA/BIGDATA/Taller-2/test_personas.Rds")
train_hogares <- readRDS("C:/Users/ASUS/OneDrive - Universidad de los Andes/Documentos/Respaldo/MECA/BIGDATA/Taller-2/train_hogares.Rds")
train_personas <- readRDS("C:/Users/ASUS/OneDrive - Universidad de los Andes/Documentos/Respaldo/MECA/BIGDATA/Taller-2/train_personas.Rds")
test_personas$P6020[test_personas$P6020 == 1] <- 0
test_personas$P6020[test_personas$P6020 == 2] <- 1
#crear variable para ver si es adulto
test_personas <- test_personas %>%
mutate(P6240 = ifelse(P6240==1, 1,0),
P6040 = ifelse(P6040 >= 18, 1,0),
P6585s1 = ifelse(P6585s1==1, 1, 0),
P6585s2 = ifelse(P6585s2==1, 1, 0),
P6585s3 = ifelse(P6585s3==1, 1, 0),
P6585s4 = ifelse(P6585s4==1, 1, 0))
modelo1 <- lm(Ingtot~factor(Oficio), test_personas)
ing_predicho <- predict(modelo1, newdata = test_personas)
modelo1 <- lm(Ingtot~factor(Oficio), train_personas)
ing_predicho <- predict(modelo1, newdata = test_personas)
test_personas <- test_personas %>%
mutate(ingreso = predict(modelo1, newdata = test_personas))
View(test_personas)
ingreso_test <- df
ingreso_test <- aggregate(test_personas$ingreso, by = list(test_personas$id), FUN = sum)
summary(test_personas$P6040)
rm(ingreso_test)
test_personas <- test_personas %>%
mutate(ingreso_test = aggregate(test_personas$ingreso, by = list(test_personas$id), FUN = sum),
Num_muj= aggregate(test_personas$P6020, by = list(test_personas$id), FUN = sum),
Num_trabhog= aggregate(test_personas$P6240, by = list(test_personas$id), FUN = sum),
Num_adulth= aggregate(test_personas$P6040, by = list(test_personas$id), FUN = sum),
sub1= aggregate(test_personas$P6585s1, by = list(test_personas$id), FUN = sum),
sub2= aggregate(test_personas$P6585s2, by = list(test_personas$id), FUN = sum),
sub3= aggregate(test_personas$P6585s3, by = list(test_personas$id), FUN = sum),
sub4= aggregate(test_personas$P6585s4, by = list(test_personas$id), FUN = sum),
subsidio= ifelse(sub1+sub2+sub3+sub4 >0, 1,0))
test_personas <- test_personas %>% group_by(id) %>%
mutate(ingreso_test = sum(ingreso))
test_personas$ingreso[is.na(test_personas$ingreso)] <- 0
test_personas <- test_personas %>% group_by(id) %>%
mutate(ingreso_test = sum(ingreso))
test_personas <- test_personas %>% group_by(id) %>%
mutate(ingreso_test = sum(ingreso),
num_mujeresh = sum(P6020),
mun_adulth = sum(P6040),
sub1 = sum(P6585s1),
sub2 = sum(P6585s2),
sub3 = sum(P6585s3),
sub4 = sum(P6585s4),
subsidio= ifelse(sub1+sub2+sub3+sub4 >0, 1,0))
test_personas$P6585s1[is.na(test_personas$P6585s1)] <- 0
test_personas$P6585s2[is.na(test_personas$P6585s2)] <- 0
test_personas$P6585s3[is.na(test_personas$P6585s3)] <- 0
test_personas$P6585s4[is.na(test_personas$P6585s4)] <- 0
test_personas <- test_personas %>% group_by(id) %>%
mutate(ingreso_test = sum(ingreso),
num_mujeresh = sum(P6020),
mun_adulth = sum(P6040),
sub1 = sum(P6585s1),
sub2 = sum(P6585s2),
sub3 = sum(P6585s3),
sub4 = sum(P6585s4),
subsidio= ifelse(sub1+sub2+sub3+sub4 >0, 1,0))
test_completa <- merge(test_hogares, test_personas, by.x="id", by.y="id", all.x = TRUE, all.y = FALSE)
test_completa2 <- aurelio = aggregate(.~ id,test_completa, mean)
test_completa2 <- aggregate(.~ id,test_completa, FUN=mean)
test_completa2 <- aggregate(.~ id,test_completa, mean)
aggregate(.~ id,test_completa, mean)
test_completa2 <- test_completa %>% group_by(id) %>%
summarise_each(funs=mean)
View(test_completa2)
summary(test_completa2$id$ingreso_test)
filter(test_completa2, id=41fefbf9eb481997847edeb7)
filter(test_completa2, id==41fefbf9eb481997847edeb7)
filter(test_completa2, id== "41fefbf9eb481997847edeb7")
rm(test_completa2)
Aurelio <- test_personas %>% group_by(id) %>%
summarise_each(funs=mean)
View(Aurelio)
rm(Aurelio)
test_completa <- test_personas %>% group_by(id) %>%
summarise_each(funs=mean)
test_completa <- test_completa %>%
mutate( Muj_edad = Mujer*Edad
,Mdll = factor(ifelse(Mdll =="MEDELLIN", 1, 0 )),
Cali = factor(ifelse(Cali =="CALI", 1, 0 )),
Bqa = factor(ifelse(Bqa =="BARRANQUILLA", 1, 0)),
Qbd = factor(ifelse(Qbd =="QUIBDO", 1, 0)),
Gjr = factor(ifelse(Gjr =="RIOHACHA", 1, 0)))
#### creamos variables de interacción y nuevas variables
test_completa <-  test_completa %>%
mutate(Mdll = Dominio.x,
Cali = Dominio.x,
Bqa = Dominio.x,
Qbd = Dominio.x,
Rioh = Dominio.x)
test_completa <-  test_completa %>%
mutate(Mdll = Dominio,
Cali = Dominio,
Bqa = Dominio,
Qbd = Dominio,
Rioh = Dominio)
View(test_completa)
test_completa <- merge(test_hogares, test_personas, by.x="id", by.y="id", all.x = TRUE, all.y = FALSE)
test_completa <- test_personas %>% group_by(id) %>%
summarise_each(funs=mean)
test_com1 <- test_personas %>%
mutate(Dominio = test_personas$Dominio)
test_com1 <- test_personas %>%
mutate(Dominio = test_hogares$Dominio)
test_com1 <- test_com1 %>%
mutate(Dominio = test_hogares$Dominio)
test_completa <- test_completa %>%
rename(l_pob = Lp,
l_ind = Li,
T_vivienda = P5090,
T_hab = P5000,
Dormitorios = P5010,
val_arriendo = P5130,
Relacion_JH = P6050,
Reg_salud = P6100,
Niv_educ = P6210,
Grado = P6210s1,
Temp_emp = P6426,
tipo_of = P6430,
horas_t =P6800,
cotiza_p = P6920,
Sub_Alim = P6585s1,
Sub_transp = P6585s2,
Sub_fam = P6585s3,
Sub_educ= P6585s4)
rm(list = ls())
test_hogares <- readRDS("C:/Users/ASUS/OneDrive - Universidad de los Andes/Documentos/Respaldo/MECA/BIGDATA/Taller-2/test_hogares.Rds")
test_personas <- readRDS("C:/Users/ASUS/OneDrive - Universidad de los Andes/Documentos/Respaldo/MECA/BIGDATA/Taller-2/test_personas.Rds")
train_hogares <- readRDS("C:/Users/ASUS/OneDrive - Universidad de los Andes/Documentos/Respaldo/MECA/BIGDATA/Taller-2/train_hogares.Rds")
train_personas <- readRDS("C:/Users/ASUS/OneDrive - Universidad de los Andes/Documentos/Respaldo/MECA/BIGDATA/Taller-2/train_personas.Rds")
library(car)
library(tidyverse)
library(dplyr)
library(skimr)  #estadísticas descriptivas
library(descr) ###tablas cruzadas
library(tableone) #descriptivas
library(flextable) #tablas
library(huxtable) #regresiones de tablas
###### limpieza y manejo de las variables
#recodificar variable de mujeres
test_personas$P6020[test_personas$P6020 == 1] <- 0
test_personas$P6020[test_personas$P6020 == 2] <- 1
#crear variable para ver si es adulto
test_personas <- test_personas %>%
mutate(P6240 = ifelse(P6240==1, 1,0),
P6040 = ifelse(P6040 >= 18, 1,0),
P6585s1 = ifelse(P6585s1==1, 1, 0),
P6585s2 = ifelse(P6585s2==1, 1, 0),
P6585s3 = ifelse(P6585s3==1, 1, 0),
P6585s4 = ifelse(P6585s4==1, 1, 0))
#para generar la base completa
modelo1 <- lm(Ingtot~factor(Oficio), train_personas)
ing_predicho <- predict(modelo1, newdata = test_personas)
head(ing_predicho)
test_personas <- test_personas %>%
mutate(ingreso = predict(modelo1, newdata = test_personas))
#creamos un df para luego unir las variables
rm(ingreso_test)
#volvemos 0 los NA en ingreso para sumar
test_personas$ingreso[is.na(test_personas$ingreso)] <- 0
test_personas$P6585s1[is.na(test_personas$P6585s1)] <- 0
test_personas$P6585s2[is.na(test_personas$P6585s2)] <- 0
test_personas$P6585s3[is.na(test_personas$P6585s3)] <- 0
test_personas$P6585s4[is.na(test_personas$P6585s4)] <- 0
# se hacen algunos mutate con las variables que necesitamos
test_personas <- test_personas %>% group_by(id) %>%
mutate(ingreso_test = sum(ingreso),
num_mujeresh = sum(P6020),
mun_adulth = sum(P6040),
sub1 = sum(P6585s1),
sub2 = sum(P6585s2),
sub3 = sum(P6585s3),
sub4 = sum(P6585s4),
subsidio= ifelse(sub1+sub2+sub3+sub4 >0, 1,0))
# Merge de las bases de datos de Test
rm(Aurelio)
test_completa <- merge(test_hogares, test_personas, by.x="id", by.y="id", all.x = TRUE, all.y = FALSE)
test_completa <- test_personas %>% group_by(id) %>%
summarise_each(funs=mean)
test_completa <- test_personas %>% group_by(id) %>%
summarise_each(funs=mean[-Dominio.x,])
test_completa <- test_personas %>% group_by(id) %>%
summarise_each(funs=mean[-Dominio.x])
test_completa <- test_personas %>% group_by(id) %>%
summarise_each(funs=mean[,-Dominio.x])
test_completa <- test_personas %>% group_by(id) %>%
summarise_each(funs=mean[-Dominio.x,])
test_completa <- test_personas %>% group_by(id) %>%
summarise_each(funs=mean[Dominio.x,])
test_completa <- test_personas %>% group_by(id) %>%
summarise_each(funs=mean[,"-Dominio.x"])
test_completa <- test_personas %>% group_by(id) %>%
summarise_each(funs=mean[,"-Dominio.x"])
